name: Run UI tests

on:
  pull_request:
    branches: [ main, '**-feature' ]
    types: [ opened, synchronize, reopened]
  push:
    branches: [ main ]

env:
  NODE_VERSION: 22.13.1

jobs:
  playwright:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        name: Set up Node.js
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: ./package-lock.json
      
      - uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      - run: npx playwright install-deps
        if: steps.playwright-cache.outputs.cache-hit == 'true'

      - name: Start services
        working-directory: ./docker
        run: docker compose up -d

      - name: Run Playwright UI tests
        env:
          CI: true
          PLAYWRIGHT_BASEURL: "http://localhost:8080"
        run: npm run test:e2e

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7


      - name: Stop services
        if: always()
        working-directory: ./docker
        run: docker compose stop